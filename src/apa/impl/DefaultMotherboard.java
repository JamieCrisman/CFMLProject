package apa.impl;

import apa.*;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;

import org.protege.owl.codegeneration.inference.CodeGenerationInference;

import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLOntology;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultMotherboard <br>
 * @version generated on Mon Mar 09 12:06:31 CDT 2015 by james
 */
public class DefaultMotherboard extends WrappedIndividualImpl implements Motherboard {

    public DefaultMotherboard(CodeGenerationInference inference, IRI iri) {
        super(inference, iri);
    }





    /* ***************************************************
     * Object Property http://www.semanticweb.org/james/ontologies/2015/0/untitled-ontology-15#madeFrom
     */
     
    public Collection<? extends CPU> getMadeFrom() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_MADEFROM,
                                               DefaultCPU.class);
    }

    public boolean hasMadeFrom() {
	   return !getMadeFrom().isEmpty();
    }

    public void addMadeFrom(CPU newMadeFrom) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_MADEFROM,
                                       newMadeFrom);
    }

    public void removeMadeFrom(CPU oldMadeFrom) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_MADEFROM,
                                          oldMadeFrom);
    }


    /* ***************************************************
     * Object Property http://www.semanticweb.org/james/ontologies/2015/0/untitled-ontology-15#producedBy
     */
     
    public Collection<? extends Service> getProducedBy() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_PRODUCEDBY,
                                               DefaultService.class);
    }

    public boolean hasProducedBy() {
	   return !getProducedBy().isEmpty();
    }

    public void addProducedBy(Service newProducedBy) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_PRODUCEDBY,
                                       newProducedBy);
    }

    public void removeProducedBy(Service oldProducedBy) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_PRODUCEDBY,
                                          oldProducedBy);
    }


}
